RDBMS (Relational DataBase Management Systems)
SQL
TABLES
COLUMNS
ROWS

User Table:
	NAME	|	AGE	|	DESIGNATION
	Ahsan	|	30	|	Software Architect
	Saad	|	27	|	Software Engineer

_______________________________________________________________________________________________

Document Database:

Collections

User Collection:
Array of Documents
Looks similar to a JavaScript Object
[
{
	name: 'Ahsan',
	age: 30,
	Designation: 'Software Architect'
},
{
	name: 'Saad',
	age: 27,
	Designation: 'Software Engineer'
}

]


Create a Model:
1. Create a schema
2. Create a model using the schema


/notes									All Methods require a Filter Object
________________________________________________________________________________________________
Get elements => GET                     Note.find(
										{}(filter Object), 						
										(err, notes)=>{

										});
________________________________________________________________________________________________
Get element by ID => GET/:id/			Note.findById(
										noteId(filter Object), 
										(err, note)=>{

										});
________________________________________________________________________________________________
Add element => POST						Note.findByIdAndUpdate(
										noteId(filter Object),
										updatedBody, 
										{new: true},
										(err, updatedNote)=>{

										});
________________________________________________________________________________________________
Delete element => DELETE/:id/ 			Note.findByIdAndRemove(
										noteId(filter Object), 
										(err, note)=>{

										});
________________________________________________________________________________________________